#coding=utf-8

"""
@author: Security Team, JS-Telecom corp.
@date: 2020/04/15
"""
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def vul():
	"""
	target::ip.txt, format 1.1.1.1, 1 ip for 1 line
	"""
	f = open("ip.txt","r")
	res = open("vul.txt","a+")
	fail = open("log.txt","w+")
	pro = "https://"
	ver7= "WebSphere Application Server/7"
	ver8= "WebSphere Application Server/8"
	ver9= "WebSphere Application Server/9"
	for i in f.readlines():
		i = i.replace("\n","")
		for port in range(8880,8885,1):
			url = pro + i + ":" + str(port)
			try:
				rq = requests.get(url,verify=False,timeout=2)
				#print i.replace("\n","")+uri1
				if (rq.status_code == 500) and ("SOAP" in rq.content) and ((ver7 in rq.headers["Server"]) or (ver8 in rq.headers["Server"]) or (ver9 in rq.headers["Server"])):
					print(url+" is CVE-2020-4276 vulnerable!")
					res.write(url+",CVE-2020-4276 vulnerable!\n")
					break
				else:
					print(url+" is not CVE-2020-4276 vulnerable!")
			except:
				print(url.replace("\n","")+" error!")
				fail.write(url.replace("\n","")+" error!")
	f.close()
	res.close()
	fail.close()
	
def test(url):
	rq = requests.get(url,verify=False)
	print rq.status_code==500
	print "SOAP" in rq.content
	print "WebSphere Application Server/8" in rq.headers["Server"]
	
if __name__=="__main__":
	#vul()
	vul()
